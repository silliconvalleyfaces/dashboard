if (self.CavalryLogger) { CavalryLogger.start_js(["Zl+2u"]); }

__d('SpammyProfileChooser',['CSS','DOM','Event','ProfileChooser'],(function a(b,c,d,e,f,g){var h,i;if(c.__markCompiled)c.__markCompiled();h=babelHelpers.inherits(j,c('ProfileChooser'));i=h&&h.prototype;j.prototype.initToggle=function(k){'use strict';c('Event').listen(k,'click',function(){this.toggleAll(k.checked);}.bind(this));};j.prototype.toggleAll=function(k){'use strict';var l=this.typeahead.getCore().getValue();if(!l)this.cache[this.activeCache].forEach(function(n){this.setItemValue(n,k);},this);var m=this.listView;c('DOM').scry(m.getRoot(),'li.checkableListItem').forEach(function(n){if(!c('CSS').hasClass(n,'disabledCheckable')){l&&this.setItemValue(c('DOM').find(n,'.checkbox').value,k);m.toggleCheckableItem(n,k);}},this);this.typeahead.getCore().setHiddenValue(JSON.stringify(this.checkedItems));this.updateCheckableCount();};j.listenForSpammyToggle=function(k,l){'use strict';k.initToggle(l);k.subscribe('clickedCheckable',function(m,n){if(l.checked&&!!n&&!n.new_value)l.checked=false;if(!l.checked&&!!n&&!!n.new_value){var o=k.listView,p=true;c('DOM').scry(o.getRoot(),'li.checkableListItem').every(function(q){if(!c('DOM').find(q,'.checkbox').checked)p=false;return p;});l.checked=p;}});};function j(){'use strict';h.apply(this,arguments);}f.exports=j;}),null);
__d("XAssociateGroupThreadController",["XController"],(function a(b,c,d,e,f,g){c.__markCompiled&&c.__markCompiled();f.exports=c("XController").create("\/groups\/messenger\/associate_group_thread\/",{});}),null);